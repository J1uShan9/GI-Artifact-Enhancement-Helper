name: .NET Core Desktop

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    env:
      Solution_Name: WpfApp.sln
      Default_Name: WpfApp
      Project_Name: GI-Artifact-Enhancement-Helper

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Get the current tag version
    - name: Get version from tag
      id: get_version
      run: |
        $ref = "${{ github.ref }}"
        if ($ref -match 'refs/tags/(.*)') {
          $tag = $matches[1]
        } else {
          $tag = "unknown"
        }
        echo "version=$tag" >> $env:GITHUB_OUTPUT

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=Release /p:Platform="Any CPU"

    # Build the application
    - name: Build the application
      run: msbuild $env:Solution_Name /t:Build /p:Configuration=Release /p:Platform="Any CPU"

    # List build directory contents to verify the output
    - name: List build directory contents
      run: |
        Get-ChildItem -Recurse -Path "$env:GITHUB_WORKSPACE\bin\Release"
        $exePath = "$env:GITHUB_WORKSPACE\bin\Release\net6.0-windows\$env:Default_Name.exe"
        if (Test-Path $exePath) {
          echo "Executable file found: $exePath"
        } else {
          Write-Error "Executable file not found: $exePath"
        }

    # Rename the build artifacts
    - name: Rename build artifacts
      run: |
        $buildDir = "$env:GITHUB_WORKSPACE\bin\Release\net6.0-windows"
        $outputDir = "$env:GITHUB_WORKSPACE\output"
        
        New-Item -ItemType Directory -Force -Path $outputDir
        
        $exePath = "$buildDir\$env:Default_Name.exe"
        $outputPath = "$outputDir\$env:Project_Name-${{ steps.get_version.outputs.version }}.exe"
        
        Write-Output "Moving from: $exePath"
        Write-Output "Output Dir: $outputDir"
        Write-Output "Moving to: $outputPath"
        
        Move-Item -Path $exePath -Destination $outputPath -Force

    # Upload the build artifacts: https://github.com/marketplace/actions/upload-a-build-artifact
    - name: Upload build artifacts
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: Build Artifacts
        path: ${{ github.workspace }}/output

    # Upload the release
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{ github.workspace }}/output/*
        generate_release_notes: true
